{"version":3,"sources":["api/colors.ts","App.tsx","api/cars.ts","index.tsx"],"names":["id","name","prepearedCars","brand","rentPrice","colorId","map","car","color","colorsFromServer","find","c","App","useState","query","setQuery","selectedColorId","setSelectedColorId","visibleCars","filter","toLowerCase","includes","type","placeholder","value","onChange","event","target","style","ReactDOM","render","document","getElementById"],"mappings":"mOAAe,GACb,CAAEA,GAAI,EAAGC,KAAM,SACf,CAAED,GAAI,EAAGC,KAAM,SACf,CAAED,GAAI,EAAGC,KAAM,Q,OCKXC,ECRS,CACb,CACEF,GAAI,EAAGG,MAAO,OAAQC,UAAW,IAAKC,QAAS,GAEjD,CACEL,GAAI,EAAGG,MAAO,OAAQC,UAAW,IAAKC,QAAS,GAEjD,CACEL,GAAI,EAAGG,MAAO,UAAWC,UAAW,IAAKC,QAAS,GAEpD,CACEL,GAAI,EAAGG,MAAO,OAAQC,UAAW,GAAIC,QAAS,GAEhD,CACEL,GAAI,EAAGG,MAAO,SAAUC,UAAW,GAAIC,QAAS,GAElD,CACEL,GAAI,EAAGG,MAAO,OAAQC,UAAW,IAAKC,QAAS,GAEjD,CACEL,GAAI,EAAGG,MAAO,OAAQC,UAAW,IAAKC,QAAS,GAEjD,CACEL,GAAI,EAAGG,MAAO,OAAQC,UAAW,GAAIC,QAAS,GAEhD,CACEL,GAAI,EAAGG,MAAO,OAAQC,UAAW,IAAKC,QAAS,GAEjD,CACEL,GAAI,GAAIG,MAAO,OAAQC,UAAW,IAAKC,QAAS,GAElD,CACEL,GAAI,GAAIG,MAAO,aAAcC,UAAW,IAAKC,QAAS,IDxBrBC,KAAI,SAAAC,GACvC,IAAMC,EAAQC,EAAiBC,MAAK,SAAAC,GAAC,OAAIA,EAAEX,KAAOO,EAAIF,WAEtD,OAAO,YAAC,eACHE,GADL,IAEEC,aAMSI,EAAgB,WAC3B,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA8CF,mBAAS,GAAvD,mBAAOG,EAAP,KAAwBC,EAAxB,KASIC,EAAW,YAAOhB,GAiBtB,OAfIY,IACFI,EAAcA,EAAYC,QAAO,SAAAZ,GAI/B,OAHkBA,EAAVJ,MACqBiB,cAGZC,SAASP,EAAMM,mBAKhCJ,IACFE,EAAcA,EAAYC,QAAO,SAAAZ,GAAG,OAAIA,EAAIF,UAAYW,MAIxD,gCACE,uBACEM,KAAK,SACLC,YAAY,oBACZC,MAAOV,EACPW,SA9Bc,SAACC,GAAD,OAClBX,EAASW,EAAMC,OAAOH,UAgCpB,yBACEA,MAAOR,EACPS,SAhCe,SAACC,GAAD,OACnBT,GAAoBS,EAAMC,OAAOH,QA6B/B,UAIE,mDACCf,EAAiBH,KAAI,SAAAE,GAAK,OACzB,wBAEEgB,MAAOhB,EAAMR,GAFf,SAIGQ,EAAMP,MAHFO,EAAMR,UAQjB,kCACE,gCACE,+BACE,oCACA,uCACA,uCACA,iDAGJ,gCACGkB,EAAYZ,KAAI,SAAAC,GAAG,eAClB,+BACE,6BAAKA,EAAIP,KACT,6BAAKO,EAAIJ,QACT,oBAAIyB,MAAO,CAAEpB,MAAM,GAAD,iBAAKD,EAAIC,aAAT,aAAK,EAAWP,OAAlC,mBAA6CM,EAAIC,aAAjD,aAA6C,EAAWP,OACxD,6BAAKM,EAAIH,cAJFG,EAAIP,gB,ME7EzB6B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.321c6f1c.chunk.js","sourcesContent":["export default [\n  { id: 1, name: 'white' },\n  { id: 2, name: 'black' },\n  { id: 3, name: 'red' },\n];\n","import React, { useState } from 'react';\nimport carsFromServer from './api/cars';\nimport colorsFromServer from './api/colors';\n\n// 1. Render car with color\n// 2. Add ability to filter car by brand name\n// 3. Add ability to filter car by color\n\nconst prepearedCars = carsFromServer.map(car => {\n  const color = colorsFromServer.find(c => c.id === car.colorId);\n\n  return ({\n    ...car,\n    color,\n  }\n\n  );\n});\n\nexport const App: React.FC = () => {\n  const [query, setQuery] = useState('');\n  const [selectedColorId, setSelectedColorId] = useState(0);\n\n  const handleInput = (event: React.ChangeEvent<HTMLInputElement>) => (\n    setQuery(event.target.value)\n  );\n  const handleSelect = (event: React.ChangeEvent<HTMLSelectElement>) => (\n    setSelectedColorId(+event.target.value)\n  );\n\n  let visibleCars = [...prepearedCars];\n\n  if (query) {\n    visibleCars = visibleCars.filter(car => {\n      const { brand } = car;\n      const normalizeBrand = brand.toLowerCase();\n\n      return (\n        normalizeBrand.includes(query.toLowerCase())\n      );\n    });\n  }\n\n  if (selectedColorId) {\n    visibleCars = visibleCars.filter(car => car.colorId === selectedColorId);\n  }\n\n  return (\n    <div>\n      <input\n        type=\"search\"\n        placeholder=\"Find by car brand\"\n        value={query}\n        onChange={handleInput}\n      />\n\n      <select\n        value={selectedColorId}\n        onChange={handleSelect}\n      >\n        <option>Chose a color</option>\n        {colorsFromServer.map(color => (\n          <option\n            key={color.id}\n            value={color.id}\n          >\n            {color.name}\n          </option>\n        ))}\n      </select>\n\n      <table>\n        <thead>\n          <tr>\n            <th>Id</th>\n            <th>Brand</th>\n            <th>Color</th>\n            <th>Rent price</th>\n          </tr>\n        </thead>\n        <tbody>\n          {visibleCars.map(car => (\n            <tr key={car.id}>\n              <td>{car.id}</td>\n              <td>{car.brand}</td>\n              <td style={{ color: `${car.color?.name}` }}>{car.color?.name}</td>\n              <td>{car.rentPrice}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1, brand: 'Audi', rentPrice: 100, colorId: 1,\n  },\n  {\n    id: 2, brand: 'Audi', rentPrice: 100, colorId: 2,\n  },\n  {\n    id: 3, brand: 'Ferarri', rentPrice: 500, colorId: 3,\n  },\n  {\n    id: 4, brand: 'Ford', rentPrice: 80, colorId: 1,\n  },\n  {\n    id: 5, brand: 'Peugot', rentPrice: 50, colorId: 1,\n  },\n  {\n    id: 6, brand: 'Ford', rentPrice: 150, colorId: 1,\n  },\n  {\n    id: 7, brand: 'Ford', rentPrice: 140, colorId: 2,\n  },\n  {\n    id: 8, brand: 'Lada', rentPrice: 20, colorId: 3,\n  },\n  {\n    id: 9, brand: 'Opel', rentPrice: 100, colorId: 1,\n  },\n  {\n    id: 10, brand: 'Opel', rentPrice: 100, colorId: 2,\n  },\n  {\n    id: 11, brand: 'Mitsubishi', rentPrice: 300, colorId: 1,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}